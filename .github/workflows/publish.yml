name: Publish to TestPyPI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/scholar_flux/**'
      - 'pyproject.toml'
      - 'poetry.lock'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (optional - uses pyproject.toml if not specified)'
        required: false
        type: string

jobs:
  build-and-publish:
    name: Build and Publish to TestPyPI
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    environment:
      name: testpypi
      url: https://test.pypi.org/p/scholar-flux
    
    permissions:
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Update version if specified
      if: github.event.inputs.version != ''
      run: |
        poetry version ${{ github.event.inputs.version }}
        echo "Updated version to ${{ github.event.inputs.version }}"
    
    - name: Display current version
      run: |
        echo "Building version: $(poetry version -s)"
    
    - name: Build package
      run: poetry build
    
    - name: Show build artifacts
      run: ls -la dist/
    
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        print-hash: true
        verbose: true

  verify-installation:
    name: Verify TestPyPI Installation
    needs: build-and-publish
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Wait for TestPyPI to index
      run: |
        echo "Waiting 60 seconds for TestPyPI to index the new package..."
        sleep 60
    
    - name: Install from TestPyPI
      run: |
        pip install --index-url https://test.pypi.org/simple/ \
                    --extra-index-url https://pypi.org/simple/ \
                    scholar-flux
    
    - name: Verify import and version
      run: |
        python -c "
        import scholar_flux
        print('‚úÖ Successfully imported scholar-flux')
        try:
            print(f'üì¶ Version: {scholar_flux.__version__}')
        except AttributeError:
            print('‚ö†Ô∏è Version attribute not found')
        "
    
    - name: Test basic functionality
      run: |
        python -c "
        from scholar_flux import SearchAPI
        api = SearchAPI(query = 'successful', use_cache = True)
        print('‚úÖ Core module imported successfully')
        "

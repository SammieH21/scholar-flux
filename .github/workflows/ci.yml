name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    env:
      # Accesses the hostnames via the names of the containers
      SCHOLAR_FLUX_MONGODB_HOST: mongodb://localhost
      SCHOLAR_FLUX_REDIS_HOST: localhost
      SCHOLAR_FLUX_MONGODB_PORT: 27018
      SCHOLAR_FLUX_REDIS_PORT: 6380
      # Mock API keys for testing (tests should use mocked responses, not live APIs)
      ARXIV_API_KEY: "MOCK_ARXIV_API_KEY_01"
      OPEN_ALEX_API_KEY: "MOCK_OPEN_ALEX_API_KEY_02"
      SPRINGER_NATURE_API_KEY: "MOCK_SPRINGER_NATURE_API_KEY_03"
      CROSSREF_API_KEY: "MOCK_CROSSREF_API_KEY_04"
      CORE_API_KEY: "MOCK_CORE_API_KEY_05"
      PUBMED_API_KEY: "MOCK_PUBMED_API_KEY_06"


    services:
      mongodb:
        image: mongo:7
        ports:
          - 27018:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

      redis:
        image: redis:7
        ports:
          - 6380:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install tox
        run: poetry run pip install tox tox-gh-actions

      - name: Run tests with tox
        run: poetry run tox
      
      # Generate coverage for this Python version
      - name: Generate coverage report
        run: poetry run tox -e coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: py${{ matrix.python-version }}
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
